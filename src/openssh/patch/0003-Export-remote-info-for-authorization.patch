From 776e45613ae6352adadf1eb11c256e0a6793be5f Mon Sep 17 00:00:00 2001
From: ab952469 <asha.behera@broadcom.com>
Date: Thu, 13 Mar 2025 14:46:03 +0530
Subject: [PATCH] Export remote info for authorization. authorization.

---
 auth.c    | 14 ++++++++++++++
 auth.h    |  3 +++
 session.c |  3 +++
 sshd.c    |  5 +++++
 4 files changed, 25 insertions(+)

diff --git a/auth.c b/auth.c
index 88578ec..2c64ee7 100644
--- a/auth.c
+++ b/auth.c
@@ -1103,3 +1103,17 @@ auth_authorise_keyopts(struct ssh *ssh, struct passwd *pw,
 
 	return 0;
 }
+
+/* Export remote IP address and port for authorization. */
+void
+export_remote_info(struct ssh *ssh)
+{
+	if (ssh != NULL)
+	{
+		const char *remote_ip = ssh_remote_ipaddr(ssh);
+		const int remote_port = ssh_remote_port(ssh);
+		const char remote_addr_port[32 + INET6_ADDRSTRLEN];
+		snprintf(remote_addr_port, sizeof(remote_addr_port), "%s %d", remote_ip, remote_port);
+		setenv("SSH_CLIENT_IPADDR_PORT", remote_addr_port, 1);
+	}
+}
diff --git a/auth.h b/auth.h
index 5da9fe7..95483ac 100644
--- a/auth.h
+++ b/auth.h
@@ -234,6 +234,9 @@ pid_t	subprocess(const char *, struct passwd *,
 
 int	 sys_auth_passwd(struct ssh *, const char *);
 
+/* Export remote IP address and port for authorization. */
+void	 export_remote_info(struct ssh *);
+
 #if defined(KRB5) && !defined(HEIMDAL)
 krb5_error_code ssh_krb5_cc_gen(krb5_context, krb5_ccache *);
 #endif
diff --git a/session.c b/session.c
index 4128d26..3fa7c02 100644
--- a/session.c
+++ b/session.c
@@ -624,6 +624,9 @@ do_exec_pty(struct ssh *ssh, Session *s, const char *command)
 		/* Close the extra descriptor for the pseudo tty. */
 		close(ttyfd);
 
+		/* Export remote IP address and port for authorization. */
+		export_remote_info(ssh);
+
 		/* record login, etc. similar to login(1) */
 #ifndef HAVE_OSF_SIA
 		do_login(ssh, s, command);
diff --git a/sshd.c b/sshd.c
index e894ad6..3e0e295 100644
--- a/sshd.c
+++ b/sshd.c
@@ -1668,6 +1668,8 @@ main(int ac, char **av)
 			test_flag = 2;
 			break;
 		case 'C':
+			/* Export remote IP address and port for authorization. */
+			export_remote_info(ssh);
 			connection_info = get_connection_info(ssh, 0, 0);
 			if (parse_server_match_testspec(connection_info,
 			    optarg) == -1)
@@ -2196,6 +2198,9 @@ main(int ac, char **av)
 	 */
 	remote_ip = ssh_remote_ipaddr(ssh);
 
+	/* Export remote IP address and port for authorization. */
+	export_remote_info(ssh);
+
 #ifdef SSH_AUDIT_EVENTS
 	audit_connection_from(remote_ip, remote_port);
 #endif
-- 
2.7.4

